<!-- Installation Guide Section -->
<template id="section-Installation">
  ##!
    compomint.addI18ns({
      'section-Installation': {
        'title': {
          'en': 'Getting Started',
          'ko': '시작하기',
          'ja': '始める',
          'zh': '开始使用'
        },
        'subtitle': {
          'en': 'Learn how to install Compomint and set up your first project with template loading',
          'ko': 'Compomint를 설치하고 템플릿 로딩으로 첫 프로젝트를 설정하는 방법을 알아보세요',
          'ja': 'Compomintをインストールし、テンプレートローディングで最初のプロジェクトを設定する方法を学習',
          'zh': '学习如何安装Compomint并使用模板加载设置您的第一个项目'
        },
        'installation': {
          'title': {
            'en': 'Installation Methods',
            'ko': '설치 방법',
            'ja': 'インストール方法',
            'zh': '安装方法'
          }
        },
        'npm': {
          'title': {
            'en': 'NPM Package',
            'ko': 'NPM 패키지',
            'ja': 'NPMパッケージ',
            'zh': 'NPM包'
          },
          'description': {
            'en': 'Install Compomint as a dependency in your Node.js project',
            'ko': 'Node.js 프로젝트에서 Compomint를 의존성으로 설치',
            'ja': 'Node.jsプロジェクトでCompomintを依存関係としてインストール',
            'zh': '在Node.js项目中将Compomint作为依赖项安装'
          }
        },
        'cdn': {
          'title': {
            'en': 'CDN Import',
            'ko': 'CDN 가져오기',
            'ja': 'CDNインポート',
            'zh': 'CDN导入'
          },
          'description': {
            'en': 'Include Compomint directly in your HTML using jsDelivr CDN',
            'ko': 'jsDelivr CDN을 사용하여 HTML에서 직접 Compomint 포함',
            'ja': 'jsDelivr CDNを使用してHTMLに直接Compomintを含める',
            'zh': '使用jsDelivr CDN在HTML中直接包含Compomint'
          }
        },
        'module': {
          'title': {
            'en': 'ES Module',
            'ko': 'ES 모듈',
            'ja': 'ESモジュール',
            'zh': 'ES模块'
          },
          'description': {
            'en': 'Import Compomint as an ES module in modern browsers',
            'ko': '모던 브라우저에서 ES 모듈로 Compomint 가져오기',
            'ja': 'モダンブラウザでESモジュールとしてCompomintをインポート',
            'zh': '在现代浏览器中将Compomint作为ES模块导入'
          }
        },
        'download': {
          'title': {
            'en': 'Direct Download',
            'ko': '직접 다운로드',
            'ja': '直接ダウンロード',
            'zh': '直接下载'
          },
          'description': {
            'en': 'Download the compiled library file for local hosting',
            'ko': '로컬 호스팅을 위한 컴파일된 라이브러리 파일 다운로드',
            'ja': 'ローカルホスティング用のコンパイルされたライブラリファイルをダウンロード',
            'zh': '下载编译后的库文件进行本地托管'
          }
        },
        'templateLoading': {
          'title': {
            'en': 'Template Loading with addTmplByUrl',
            'ko': 'addTmplByUrl로 템플릿 로딩',
            'ja': 'addTmplByUrlでテンプレートローディング',
            'zh': '使用addTmplByUrl加载模板'
          }
        },
        'basicUsage': {
          'title': {
            'en': 'Basic Usage',
            'ko': '기본 사용법',
            'ja': '基本的な使用法',
            'zh': '基本用法'
          },
          'description': {
            'en': 'Simple template loading from a single file',
            'ko': '단일 파일에서 간단한 템플릿 로딩',
            'ja': '単一ファイルからの簡単なテンプレートローディング',
            'zh': '从单个文件简单加载模板'
          }
        },
        'multipleFiles': {
          'title': {
            'en': 'Multiple Files',
            'ko': '여러 파일',
            'ja': '複数ファイル',
            'zh': '多个文件'
          },
          'description': {
            'en': 'Load templates from multiple files simultaneously',
            'ko': '여러 파일에서 동시에 템플릿 로딩',
            'ja': '複数のファイルから同時にテンプレートをロード',
            'zh': '同时从多个文件加载模板'
          }
        },
        'asyncAwait': {
          'title': {
            'en': 'Async/Await',
            'ko': 'Async/Await',
            'ja': 'Async/Await',
            'zh': 'Async/Await'
          },
          'description': {
            'en': 'Modern async/await syntax for template loading',
            'ko': '템플릿 로딩을 위한 최신 async/await 문법',
            'ja': 'テンプレートローディングのためのモダンなasync/await構文',
            'zh': '用于模板加载的现代async/await语法'
          }
        },
        'loadingOptions': {
          'title': {
            'en': 'Loading Options',
            'ko': '로딩 옵션',
            'ja': 'ローディングオプション',
            'zh': '加载选项'
          },
          'description': {
            'en': 'Advanced options for loading scripts, styles, and links',
            'ko': '스크립트, 스타일, 링크 로딩을 위한 고급 옵션',
            'ja': 'スクリプト、スタイル、リンクのローディングのための高度なオプション',
            'zh': '用于加载脚本、样式和链接的高级选项'
          }
        },
        'projectStructure': {
          'title': {
            'en': 'Recommended Project Structure',
            'ko': '권장 프로젝트 구조',
            'ja': '推奨プロジェクト構造',
            'zh': '推荐的项目结构'
          }
        },
        'quickStart': {
          'title': {
            'en': 'Quick Start Example',
            'ko': '빠른 시작 예제',
            'ja': 'クイックスタート例',
            'zh': '快速开始示例'
          }
        }
      }
    });
  ##

  <section id="installation" class="section-Installation py-16 bg-white dark:bg-gray-800">
    <div class="container mx-auto px-4">
      <!-- Header -->
      <div class="text-center mb-16">
        <h2 class="text-4xl font-bold mb-4 text-gray-900 dark:text-gray-100">##=i18n.title##</h2>
        <p class="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">##=i18n.subtitle##</p>
      </div>

      <!-- Installation Methods -->
      <div class="mb-16">
        <h3 class="text-3xl font-semibold text-center mb-12 text-gray-900 dark:text-gray-100">##=i18n.installation.title##</h3>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          <!-- NPM Package -->
          <div class="bg-gray-100 dark:bg-gray-700 rounded-xl p-6 hover:shadow-md transition-shadow duration-200">
            <div class="flex items-center mb-4">
              <div class="w-12 h-12 bg-indigo-100 dark:bg-indigo-900 rounded-lg flex items-center justify-center mr-4">
                <svg class="w-6 h-6 text-indigo-600 dark:text-indigo-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
                </svg>
              </div>
              <h4 class="text-xl font-semibold text-gray-900 dark:text-gray-100">##=i18n.npm.title##</h4>
            </div>
            <p class="text-gray-600 dark:text-gray-300 text-sm mb-4">##=i18n.npm.description##</p>
            <div class="bg-gray-800 rounded-lg p-4">
              <code class="text-green-400 font-mono text-sm">npm install compomint</code>
            </div>
          </div>

          <!-- CDN Import -->
          <div class="bg-gray-100 dark:bg-gray-700 rounded-xl p-6 hover:shadow-md transition-shadow duration-200">
            <div class="flex items-center mb-4">
              <div class="w-12 h-12 bg-indigo-100 dark:bg-indigo-900 rounded-lg flex items-center justify-center mr-4">
                <svg class="w-6 h-6 text-indigo-600 dark:text-indigo-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"></path>
                </svg>
              </div>
              <h4 class="text-xl font-semibold text-gray-900 dark:text-gray-100">##=i18n.cdn.title##</h4>
            </div>
            <p class="text-gray-600 dark:text-gray-300 text-sm mb-4">##=i18n.cdn.description##</p>
            <div class="bg-gray-800 rounded-lg p-4">
              <code class="text-green-400 font-mono text-sm break-all">
                &lt;script src="https://cdn.jsdelivr.net/npm/compomint@latest/dist/compomint.min.js"&gt;&lt;/script&gt;
              </code>
            </div>
          </div>

          <!-- ES Module -->
          <div class="bg-gray-100 dark:bg-gray-700 rounded-xl p-6 hover:shadow-md transition-shadow duration-200">
            <div class="flex items-center mb-4">
              <div class="w-12 h-12 bg-indigo-100 dark:bg-indigo-900 rounded-lg flex items-center justify-center mr-4">
                <svg class="w-6 h-6 text-indigo-600 dark:text-indigo-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"></path>
                </svg>
              </div>
              <h4 class="text-xl font-semibold text-gray-900 dark:text-gray-100">##=i18n.module.title##</h4>
            </div>
            <p class="text-gray-600 dark:text-gray-300 text-sm mb-4">##=i18n.module.description##</p>
            <div class="bg-gray-800 rounded-lg p-4">
              <code class="text-green-400 font-mono text-sm">
                import { compomint, tmpl } from "compomint";
              </code>
            </div>
          </div>

          <!-- Direct Download -->
          <div class="bg-gray-100 dark:bg-gray-700 rounded-xl p-6 hover:shadow-md transition-shadow duration-200">
            <div class="flex items-center mb-4">
              <div class="w-12 h-12 bg-indigo-100 dark:bg-indigo-900 rounded-lg flex items-center justify-center mr-4">
                <svg class="w-6 h-6 text-indigo-600 dark:text-indigo-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                </svg>
              </div>
              <h4 class="text-xl font-semibold text-gray-900 dark:text-gray-100">##=i18n.download.title##</h4>
            </div>
            <p class="text-gray-600 dark:text-gray-300 text-sm mb-4">##=i18n.download.description##</p>
            <div class="bg-gray-800 rounded-lg p-4">
              <code class="text-green-400 font-mono text-sm break-all">
                https://github.com/kurukona/compomint/releases
              </code>
            </div>
          </div>
        </div>
      </div>

      <!-- Template Loading -->
      <div class="mb-16">
        <h3 class="text-3xl font-semibold text-center mb-12 text-gray-900 dark:text-gray-100">##=i18n.templateLoading.title##</h3>
        
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
          <!-- Basic Usage -->
          <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-200 dark:border-gray-700">
            <div class="flex items-center mb-4">
              <div class="w-10 h-10 bg-blue-100 dark:bg-blue-900 rounded-lg flex items-center justify-center mr-3">
                <svg class="w-5 h-5 text-blue-600 dark:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                </svg>
              </div>
              <h4 class="text-lg font-semibold text-gray-900 dark:text-gray-100">##=i18n.basicUsage.title##</h4>
            </div>
            <p class="text-gray-600 dark:text-gray-300 text-sm mb-4">##=i18n.basicUsage.description##</p>
            <div class="bg-gray-800 rounded-lg p-4">
              <pre class="text-green-400 font-mono text-sm overflow-x-auto">
// Load single template file
compomint.addTmplByUrl(
  "templates.html", 
  function() {
    console.log("Templates loaded!");
    const component = tmpl.my.Component({});
    document.body.appendChild(component.element);
});
</pre>
            </div>
          </div>

          <!-- Multiple Files -->
          <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-200 dark:border-gray-700">
            <div class="flex items-center mb-4">
              <div class="w-10 h-10 bg-green-100 dark:bg-green-900 rounded-lg flex items-center justify-center mr-3">
                <svg class="w-5 h-5 text-green-600 dark:text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                </svg>
              </div>
              <h4 class="text-lg font-semibold text-gray-900 dark:text-gray-100">##=i18n.multipleFiles.title##</h4>
            </div>
            <p class="text-gray-600 dark:text-gray-300 text-sm mb-4">##=i18n.multipleFiles.description##</p>
            <div class="bg-gray-800 rounded-lg p-4">
              <pre class="text-green-400 font-mono text-sm overflow-x-auto">// Load multiple template files
compomint.addTmplByUrl([
  "templates/header.html",
  "templates/main.html",
  "templates/footer.html"
], function() {
  console.log("All templates loaded!");
  initializeApp();
});
</pre>
            </div>
          </div>

          <!-- Async/Await -->
          <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-200 dark:border-gray-700">
            <div class="flex items-center mb-4">
              <div class="w-10 h-10 bg-purple-100 dark:bg-purple-900 rounded-lg flex items-center justify-center mr-3">
                <svg class="w-5 h-5 text-purple-600 dark:text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                </svg>
              </div>
              <h4 class="text-lg font-semibold text-gray-900 dark:text-gray-100">##=i18n.asyncAwait.title##</h4>
            </div>
            <p class="text-gray-600 dark:text-gray-300 text-sm mb-4">##=i18n.asyncAwait.description##</p>
            <div class="bg-gray-800 rounded-lg p-4">
              <pre class="text-green-400 font-mono text-sm overflow-x-auto">
// Modern async/await syntax
async function loadAndInitialize() {
  try {
    await compomint.addTmplByUrl("templates.html");
    console.log("Templates loaded successfully!");
    const app = tmpl.app.Main({});
    document.body.appendChild(app.element);
  } catch (error) {
    console.error("Failed to load templates:", error);
  }
}</pre>
            </div>
          </div>

          <!-- Loading Options -->
          <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-200 dark:border-gray-700">
            <div class="flex items-center mb-4">
              <div class="w-10 h-10 bg-orange-100 dark:bg-orange-900 rounded-lg flex items-center justify-center mr-3">
                <svg class="w-5 h-5 text-orange-600 dark:text-orange-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                </svg>
              </div>
              <h4 class="text-lg font-semibold text-gray-900 dark:text-gray-100">##=i18n.loadingOptions.title##</h4>
            </div>
            <p class="text-gray-600 dark:text-gray-300 text-sm mb-4">##=i18n.loadingOptions.description##</p>
            <div class="bg-gray-800 rounded-lg p-4">
              <pre class="text-green-400 font-mono text-sm overflow-x-auto">
// Advanced loading options
await compomint.addTmplByUrl(
  [
    "templates.html"
  ],
  {
    loadScript: true,  // Load script tags
    loadStyle: true,   // Load style tags
    loadLink: true     // Load link tags
  });
</pre>
            </div>
          </div>
        </div>
      </div>



      <!-- Quick Start Example -->
      <div>
        <h3 class="text-3xl font-semibold text-center mb-12 text-gray-900 dark:text-gray-100">##=i18n.quickStart.title##</h3>
        
        <div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden border border-gray-200 dark:border-gray-700">
          <div class="p-6 border-b border-gray-200 dark:border-gray-700">
            <h4 class="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-2">Complete Example</h4>
            <p class="text-gray-600 dark:text-gray-300">A complete working example showing installation and template loading</p>
          </div>
          <div class="p-6 bg-gray-50 dark:bg-gray-700">
            <div class="h-[500px] bg-white dark:bg-gray-800 rounded-lg overflow-hidden">
              ##%tmpl.cmint.Playground({
                imports: [],
                template: null,
                code: `// HTML Setup
document.body.innerHTML = \`
  <div id="app-container"></div>
\`;

// Create a simple template file content
const templateContent = \`
<template id="welcome-Message">
  <div class="p-6 bg-blue-50 dark:bg-blue-900 rounded-lg border-2 border-blue-200 dark:border-blue-700">
    <h1 class="text-2xl font-bold text-blue-900 dark:text-blue-100 mb-2">
      Welcome to #\#=data.projectName#\#!
    </h1>
    <p class="text-blue-700 dark:text-blue-300">
      You have successfully loaded your first Compomint template.
    </p>
    <p class="text-sm text-blue-600 dark:text-blue-400 mt-4">
      Current time: #\#=data.timestamp#\#
    </p>
  </div>
</template>
\`;

// Simulate loading templates from URL
compomint.addTmpls(templateContent);

// Create and render component
const welcomeComponent = tmpl.welcome.Message({
  projectName: 'My Compomint App',
  timestamp: new Date().toLocaleString()
});

// Add to page
document.getElementById('app-container').appendChild(welcomeComponent.element);

console.log('Compomint app initialized successfully!');`,
                type: 'code',
                showConsole: false
              })##
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</template>